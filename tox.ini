[tox]
envlist = update, compile, autopep8, docformatter, isort, pylint, flake8, pydocstyle, docs, verify_tables, py{36, 37, 38, 39, 310, 311, 312, 313, 314}, pypy{36, 37, 38, 39, 310}
skip_missing_interpreters = true
# needed for Python 3.6
# https://tox.wiki/en/4.11.3/faq.html#testing-end-of-life-python-versions
requires = virtualenv<20.22.0

[base]
pip_compile_command = pip-compile --resolver=backtracking --strip-extras --no-emit-index-url --allow-unsafe --upgrade

[testenv]
deps = -r requirements-tests39.txt
commands = {envpython} -m pytest --cov-config={toxinidir}/tox.ini {posargs:\
             --verbose \
             --junit-xml=.tox/results.{envname}.xml \
             --durations=3 \
             } \
          --log-format='%(levelname)s %(relativeCreated)2.2f %(filename)s:%(lineno)d %(message)s' \
          tests
passenv = TEST_QUICK,TEST_KEYBOARD,TEST_RAW


[isort]
line_length = 100
indent = '    '
multi_line_output = 1
length_sort = 1
import_heading_stdlib = std imports
import_heading_thirdparty = 3rd party
import_heading_firstparty = local
import_heading_localfolder = local
sections=FUTURE,STDLIB,TYPING_STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
no_lines_before=LOCALFOLDER
known_first_party = wcwidth
known_third_party = codecov,docopt,blessed
known_typing_stdlib = typing,typing_extensions
atomic = true

[pytest]
norecursedirs = .git .tox build
addopts = --disable-pytest-warnings
          --cov-append --cov-report=html --color=yes --ignore=setup.py --ignore=.tox
          --cov=wcwidth
filterwarnings =
    error
junit_family = xunit1

[flake8]
exclude = .tox,build
max-line-length = 100
ignore = E402,E501,F401,W503,W504

[coverage:run]
branch = True
source = wcwidth
parallel = True
relative_files = True

[coverage:report]
omit = tests/*
exclude_lines = pragma: no cover
precision = 1

[coverage:paths]
source = wcwidth/

# wcwidth itself has no 3rd party dependencies, but to ensure the best available
# version for the newest to oldest python versions for testing, must also use some
# targeted versions to 'compile' those requirements into their frozen form,
# otherwise incompatible packages would be pinned. At the time of this writing the
# files compiled for version 3.9 and later are compiled by python3.13 [WIP].
[testenv:compile]
basepython = python3.13
commands = python -m compileall {toxinidir}/wcwidth {toxinidir}/bin {toxinidir}/tests {toxinidir}/docs

[testenv:update_requirements_update]
basepython = python3.13
deps = pip-tools
commands = {[base]pip_compile_command} requirements-update.in -o requirements-update.txt

[testenv:update_requirements_docs]
basepython = python3.12
deps = pip-tools
commands = {[base]pip_compile_command} requirements-docs.in -o docs/requirements.txt

[testenv:update_requirements39]
basepython = python3.9
deps = pip-tools
commands = {[base]pip_compile_command} requirements-tests39.in -o requirements-tests39.txt

[testenv:update_requirements37]
basepython = python3.7
deps = pip-tools
commands = {[base]pip_compile_command} requirements-tests37.in -o requirements-tests37.txt

[testenv:py38]
deps = -r requirements-tests37.txt

[testenv:pypy38]
deps = -r requirements-tests37.txt

[testenv:py37]
deps = -r requirements-tests37.txt

[testenv:pypy37]
deps = -r requirements-tests37.txt

[testenv:py36]
deps = -r requirements-tests36.txt

[testenv:pypy36]
deps = -r requirements-tests36.txt

[testenv:update]
basepython = python3.13
usedevelop = true
deps = -r requirements-update.txt
commands = python {toxinidir}/bin/update-tables.py {posargs:--no-check-last-modified}

[testenv:autopep8]
basepython = python3.11
deps = autopep8
commands =
    {envbindir}/autopep8 \
        --in-place \
        --recursive \
        --aggressive \
        --aggressive \
        wcwidth/ bin/ tests/ setup.py

[testenv:isort]
deps = isort
basepython = python3.13
commands = {envbindir}/isort --quiet --apply --recursive wcwidth tests bin

[testenv:pylint]
basepython = python3.13
deps = pylint
commands = {envbindir}/pylint --rcfile={toxinidir}/.pylintrc \
           --ignore=tests,docs,setup.py,conf.py,build,distutils,.pyenv,.git,.tox \
           {posargs:{toxinidir}}/wcwidth

[testenv:flake8]
basepython = python3.13
deps = flake8
commands = {envbindir}/flake8 --exclude=tests setup.py docs/ wcwidth/ bin/ tests/

[testenv:docs]
# matches .readthedocs.yaml and environment
basepython = python3.12
deps = -r {toxinidir}/docs/requirements.txt
commands = sphinx-build docs/ build/sphinx

[testenv:verify_tables]
basepython = python3.13
commands = python {toxinidir}/bin/verify-table-integrity.py

[testenv:linkcheck]
basepython = python3.11
deps = -r {toxinidir}/docs/requirements.txt
commands = {envbindir}/sphinx-build -v -W -d {toxinidir}/docs/_build/doctrees -b linkcheck docs docs/_build/linkcheck

[testenv:codecov]
basepython = python{env:TOXPYTHON:{env:TRAVIS_PYTHON_VERSION:3.10}}
passenv = TOXENV,CI,TRAVIS,TRAVIS_*,CODECOV_*
deps = codecov
commands = codecov -e TOXENV
